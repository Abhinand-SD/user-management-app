<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Admin Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="/css/dashboard.css">
  
</head>

<body>

  <nav class="navbar">
        <h1 class="navbar-brand text-white">Admin Dashboard</h1>
        <div class="d-flex align-items-center">
            <!-- Search Bar -->
            <input type="text" id="userSearch" class="form-control mr-2" placeholder="Search by email..." onkeyup="filterUsers()" style="width: 200px;" />
            <button class="btn btn-danger logout-btn" onclick="window.location.href='/admin/logout'">Logout</button>
        </div>
    </nav>

  <div class="container">
    <h2 class="mb-4 text-white ">User Management</h2>
    <div class="mb-4">
      <button class="btn btn-primary" onclick="openAddUserModal()">Add User</button>
    </div>

    <!-- User Table -->
    <h3 class="mt-5">Existing Users</h3>
    <table class="table table-bordered table-striped table-hover">
      <thead class="table-warning">
        <tr>
          <th>S I</th>
          <th>Email</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody id="userTable">
        {{#each users}}
        <tr>
          <td>{{@index}}</td>
          <td>{{this.email}}</td>
          <td>
            <button class="btn btn-primary btn-sm" onclick="openEditModal('{{this._id}}', '{{this.email}}')"> &nbsp; Edit &nbsp;</button>
            <button class="btn btn-danger btn-sm" onclick="deleteUser('{{this._id}}')">Delete</button>
          </td>
        </tr>
        {{/each}}
      </tbody>
    </table>
  </div>

  <!-- Add User Modal -->
  <div class="modal" id="addUserModal">
    <div class="modal-content">
      <span class="close" onclick="closeAddUserModal()">&times;</span>
      <h2>Add User</h2>
      <form id="addUserForm" method="post" action="/admin/create-user">
        <div class="mb-3">
          <label for="addEmail" class="form-label">Email</label>
          <input id="email-field" type="email" name="email" class="form-control" onkeyup="validateEmail()" />
          <span id="email-error" class="error-message" ></span><br> 
        </div>
        <div class="mb-3">
          <label for="addPassword" class="form-label">Password</label>
          <input type="password" id="password-field" name="password" class="form-control" required />
        </div>
        <button type="submit" class="btn btn-primary">Submit</button>
      </form>
    </div>
  </div>

  <!-- Edit User Modal -->
  <div class="modal" id="editUserModal">
    <div class="modal-content">
      <span class="close" onclick="closeEditUserModal()">&times;</span>
      <h2>Edit User</h2>
      <form id="editUserForm" method="post" action="/admin/edit-user">
      <input id="message" type="hidden" name="message" value="{{{message}}}" >
        <input value="{{this._id}}" type="hidden" id="editUserId" name="id" />
        <div class="mb-3">
          <label for="editEmail" class="form-label">Email</label>
          <input type="email" id="editEmail" name="email" class="form-control" required />
        </div>
        {{!-- <div class="mb-3">
          <label for="editPassword" class="form-label">New Password</label>
          <input type="password" id="editPassword" name="password" class="form-control" />
        </div> --}}
        <button type="submit" class="btn btn-primary">Save Changes</button>
      </form>
    </div>
  </div>


  <script>

// search Users
    function filterUsers() {
        const searchQuery = document.getElementById('userSearch').value.toLowerCase();
        const userRows = document.querySelectorAll('#userTable tr');

        userRows.forEach(row => {
            const emailCell = row.cells[1]; 
            if (emailCell) {
                const emailText = emailCell.textContent.toLowerCase();
                if (emailText.includes(searchQuery)) {
                    row.style.display = ''; 
                } else {
                    row.style.display = 'none'; 
                }
            }
        });
    }

    // Open and close Add User Modal
    function openAddUserModal() {
      document.getElementById('addUserModal').style.display = 'block';
    }

    function closeAddUserModal() {
      document.getElementById('addUserModal').style.display = 'none';
    }

    // Open and close Edit User Modal
    function openEditModal(id, email) {
      document.getElementById('editUserModal').style.display = 'block';
      document.getElementById('editUserId').value = id;
      document.getElementById('editEmail').value = email;
    }

    function closeEditUserModal() {
      document.getElementById('editUserModal').style.display = 'none';
    }

    // Delete User function
    function deleteUser(userId) {
      if (confirm("Are you sure you want to delete this user?")) {
        window.location.href = `/admin/delete-user/${userId}`;
      }
    }

    const message = document.getElementById('message').value;

  if (message) {
    swal(message);
  }

  </script>
  
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
  <script src='/public/js/form.js'></script>
  
</body>
</html>
